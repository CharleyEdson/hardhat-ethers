const ethers = require("ethers")
const fs = require("fs-extra")
require("dotenv").config()

async function main() {
    // compile in code
    // compile separately
    // http://127.0.0.1:7545
    const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL)
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider)
    // const encryptedJson = fs.readFileSync("./.encryptedKey.json", "utf8")
    // let wallet = new ethers.Wallet.fromEncryptedJsonSync(
    //     encryptedJson,
    //     process.env.PRIVATE_KEY_PASSWORD
    // )
    // wallet = await wallet.connect(provider)
    const abi = fs.readFileSync("./simpleStorage_sol_SimpleStorage.abi", "utf8")
    const binary = fs.readFileSync(
        "./simpleStorage_sol_SimpleStorage.bin",
        "utf8"
    )
    const contractFactory = new ethers.ContractFactory(abi, binary, wallet)
    console.log("Deploying, please wait...")
    const contract = await contractFactory.deploy() // Stop here! Wait for contract to deploy!
    await contract.deployTransaction.wait(1)
    console.log(`Contract Address: ${contract.address}`)
    //   console.log("here is the deployed transaction: ");
    //   console.log(contract.deployTransaction);
    //   console.log("here is the transaction receipt: ");
    //   console.log(transactionReceipt);
    // }
    //   console.log("Deployed only with transaction data.");
    //   const nonce = await wallet.getTransactionCount();
    //   const tx = {
    //     nonce: nonce,
    //     gasPrice: 20000000000,
    //     gasLimit: 1000000,
    //     to: null,
    //     value: 0,
    //     data: "0x608060405234801561001057600080fd5b506107a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e64cec1146100675780634f2be91f146100855780636057361d146100a35780636f760f41146100bf5780638bab8dd5146100db5780639e7a13ad1461010b575b600080fd5b61006f61013c565b60405161007c919061055c565b60405180910390f35b61008d610145565b60405161009a919061055c565b60405180910390f35b6100bd60048036038101906100b8919061049f565b61014e565b005b6100d960048036038101906100d49190610443565b610158565b005b6100f560048036038101906100f091906103fa565b6101e8565b604051610102919061055c565b60405180910390f35b6101256004803603810190610120919061049f565b610216565b604051610133929190610577565b60405180910390f35b60008054905090565b60006002905090565b8060008190555050565b600260405180604001604052808381526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190805190602001906101be9291906102d2565b505050806001836040516101d29190610545565b9081526020016040518091039020819055505050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6002818154811061022657600080fd5b906000526020600020906002020160009150905080600001549080600101805461024f90610670565b80601f016020809104026020016040519081016040528092919081815260200182805461027b90610670565b80156102c85780601f1061029d576101008083540402835291602001916102c8565b820191906000526020600020905b8154815290600101906020018083116102ab57829003601f168201915b5050505050905082565b8280546102de90610670565b90600052602060002090601f0160209004810192826103005760008555610347565b82601f1061031957805160ff1916838001178555610347565b82800160010185558215610347579182015b8281111561034657825182559160200191906001019061032b565b5b5090506103549190610358565b5090565b5b80821115610371576000816000905550600101610359565b5090565b6000610388610383846105cc565b6105a7565b9050828152602081018484840111156103a4576103a3610736565b5b6103af84828561062e565b509392505050565b600082601f8301126103cc576103cb610731565b5b81356103dc848260208601610375565b91505092915050565b6000813590506103f481610756565b92915050565b6000602082840312156104105761040f610740565b5b600082013567ffffffffffffffff81111561042e5761042d61073b565b5b61043a848285016103b7565b91505092915050565b6000806040838503121561045a57610459610740565b5b600083013567ffffffffffffffff8111156104785761047761073b565b5b610484858286016103b7565b9250506020610495858286016103e5565b9150509250929050565b6000602082840312156104b5576104b4610740565b5b60006104c3848285016103e5565b91505092915050565b60006104d7826105fd565b6104e18185610608565b93506104f181856020860161063d565b6104fa81610745565b840191505092915050565b6000610510826105fd565b61051a8185610619565b935061052a81856020860161063d565b80840191505092915050565b61053f81610624565b82525050565b60006105518284610505565b915081905092915050565b60006020820190506105716000830184610536565b92915050565b600060408201905061058c6000830185610536565b818103602083015261059e81846104cc565b90509392505050565b60006105b16105c2565b90506105bd82826106a2565b919050565b6000604051905090565b600067ffffffffffffffff8211156105e7576105e6610702565b5b6105f082610745565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561065b578082015181840152602081019050610640565b8381111561066a576000848401525b50505050565b6000600282049050600182168061068857607f821691505b6020821081141561069c5761069b6106d3565b5b50919050565b6106ab82610745565b810181811067ffffffffffffffff821117156106ca576106c9610702565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61075f81610624565b811461076a57600080fd5b5056fea2646970667358221220596c7c9c2fa27db570adad860f2f0fee6c795543e495b311b9243795dd56558564736f6c63430008070033",
    //     chainId: 1337,
    //   };
    //   const sentTxResponse = await wallet.sendTransaction(tx);
    //   await sentTxResponse.wait(1);
    //   console.log(sentTxResponse);
    //

    const currentFavoriteNumber = await contract.retrieve()
    console.log(`Current Favorite Number: ${currentFavoriteNumber.toString()}`)
    const transactionResponse = await contract.store("7")
    const transactionReceipt = await transactionResponse.wait(1)
    const updatedFavoriteNumber = await contract.retrieve()
    console.log(`Updated favorite number is: ${updatedFavoriteNumber}`)
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error)
        process.exit(1)
    })
